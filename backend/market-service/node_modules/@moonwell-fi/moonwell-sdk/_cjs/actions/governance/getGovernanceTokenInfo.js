"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGovernanceTokenInfo = void 0;
const index_js_1 = require("../../common/index.js");
const index_js_2 = require("../../environments/index.js");
const logger = __importStar(require("../../logger/console.js"));
async function getGovernanceTokenInfo(_client, args) {
    const logId = logger.start("getGovernanceTokenInfo", "Starting to get governance token info...");
    if (args.governanceToken === "WELL") {
        const totalSupply = await index_js_2.publicEnvironments.moonbeam.contracts.governanceToken.read.totalSupply();
        logger.end(logId);
        return {
            totalSupply: new index_js_1.Amount(totalSupply || 0n, 18),
        };
    }
    else {
        const totalSupply = await index_js_2.publicEnvironments.moonriver.contracts.governanceToken.read.totalSupply();
        logger.end(logId);
        return {
            totalSupply: new index_js_1.Amount(totalSupply || 0n, 18),
        };
    }
}
exports.getGovernanceTokenInfo = getGovernanceTokenInfo;
//# sourceMappingURL=getGovernanceTokenInfo.js.map